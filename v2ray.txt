ss://YWVzLTI1Ni1nY206YzY0d2o3UEZkTVlFRlhjcg==@65.49.209.169:9051#JMS-1192611@c18s1.portablesubmarines.com:9051 [91ms]
vmess://eyJ2IjogIjIiLCAicHMiOiAiczMgWzEyMW1zXSIsICJhZGQiOiAiYzNzMy5wb3J0YWJsZXN1Ym1hcmluZXMuY29tIiwgInBvcnQiOiAiNTAzOCIsICJpZCI6ICIzMWFjZDU4Ny1hMmIwLTQxOWQtODc1Ny1kNmJkN2MxMWQxYjEiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
ss://YWVzLTI1Ni1nY206YzY0d2o3UEZkTVlFRlhjcg==@65.49.215.7:9051#JMS-1192611@c18s2.portablesubmarines.com:9051 [91ms]
vmess://eyJ2IjogIjIiLCAicHMiOiAiSk1TLTExOTI2MTFAYzE4czMucG9ydGFibGVzdWJtYXJpbmVzLmNvbTo5MDUxIFs5NW1zXSIsICJhZGQiOiAiMTk4LjM1LjQ2LjIyIiwgInBvcnQiOiAiOTA1MSIsICJpZCI6ICJmNDIzYTYxZC0xMzY2LTQzYzMtOTU4NC03ZjU4MzdhYjQ1OWIiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
vmess://eyJ2IjogIjIiLCAicHMiOiAiczgwMSBbMTMzbXNdIiwgImFkZCI6ICJjM3M4MDEucG9ydGFibGVzdWJtYXJpbmVzLmNvbSIsICJwb3J0IjogIjUwMzgiLCAiaWQiOiAiMzFhY2Q1ODctYTJiMC00MTlkLTg3NTctZDZiZDdjMTFkMWIxIiwgImFpZCI6ICIwIiwgIm5ldCI6ICJ0Y3AiLCAidHlwZSI6ICJ2bWVzcyIsICJ0bHMiOiAiIn0=
ss://YWVzLTI1Ni1nY206QXpTUFZjU0x3bw==@c3s1.portablesubmarines.com:5038#s1 [151ms]
ss://YWVzLTI1Ni1nY206QXpTUFZjU0x3bw==@c3s2.portablesubmarines.com:5038#s2 [156ms]
vmess://eyJ2IjogIjIiLCAicHMiOiAiSk1TLTExOTI2MTFAYzE4czUucG9ydGFibGVzdWJtYXJpbmVzLmNvbTo5MDUxIFsyMTNtc10iLCAiYWRkIjogIjE2Mi4yNDguNzYuMjMxIiwgInBvcnQiOiAiOTA1MSIsICJpZCI6ICJmNDIzYTYxZC0xMzY2LTQzYzMtOTU4NC03ZjU4MzdhYjQ1OWIiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
vmess://eyJ2IjogIjIiLCAicHMiOiAiczUgWzI3OW1zXSIsICJhZGQiOiAiYzNzNS5wb3J0YWJsZXN1Ym1hcmluZXMuY29tIiwgInBvcnQiOiAiNTAzOCIsICJpZCI6ICIzMWFjZDU4Ny1hMmIwLTQxOWQtODc1Ny1kNmJkN2MxMWQxYjEiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
vmess://eyJ2IjogIjIiLCAicHMiOiAiczQgWzMzN21zXSIsICJhZGQiOiAiYzNzNC5wb3J0YWJsZXN1Ym1hcmluZXMuY29tIiwgInBvcnQiOiAiNTAzOCIsICJpZCI6ICIzMWFjZDU4Ny1hMmIwLTQxOWQtODc1Ny1kNmJkN2MxMWQxYjEiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
vless://d1e44075-8c92-4698-9db0-e71d7015b757@small-meal.oneeat.co:80?type=ws&remarks=small-meal.oneeat.co [5393ms]
trojan://dcb523af-7dd6-48f1-8b3e-ac5e2432a234@tuntro019.instconn.com:443?sni=tuntro019.instconn.com [857ms]
vmess://eyJ2IjogIjIiLCAicHMiOiAiQVx1OTk5OVx1NmUyZjIgWzc1M21zXSIsICJhZGQiOiAibjEuYWt0Y2pzcS5jb20iLCAicG9ydCI6ICIzMTEwMSIsICJpZCI6ICI5ODllYmUxMi0yN2FkLTNlM2QtYTRhZC02MTQxZmJlOTVlNjgiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
vmess://eyJ2IjogIjIiLCAicHMiOiAiQlx1NTNmMFx1NmU3ZTEgWzgzOG1zXSIsICJhZGQiOiAibjEuYWt0Y2pzcS5jb20iLCAicG9ydCI6ICIzMTAwMiIsICJpZCI6ICIxM2Q3MDQ0NS1lY2RkLTM3OTEtOGYwZi1hODYxMGFkMDQ1YTgiLCAiYWlkIjogIjAiLCAibmV0IjogInRjcCIsICJ0eXBlIjogInZtZXNzIiwgInRscyI6ICIifQ==
vmess://eyJ2IjogIjIiLCAicHMiOiAiXHU2NWU1XHU2NzJjMiBbODI2bXNdIiwgImFkZCI6ICJuMS5ha3RjanNxLmNvbSIsICJwb3J0IjogIjMxMTA0IiwgImlkIjogIjYxNWQ0YTFhLWUyZDUtMzMxZS05ODQyLTBmOTVhNmEwODhmNCIsICJhaWQiOiAiMCIsICJuZXQiOiAidGNwIiwgInR5cGUiOiAidm1lc3MiLCAidGxzIjogIiJ9